# Development Dockerfile with hot reload support
FROM golang:1.24-alpine

# Install development dependencies
RUN apk add --no-cache \
    git \
    ca-certificates \
    tzdata \
    postgresql-client \
    mysql-client \
    curl \
    bash \
    vim \
    make

# Install air for hot reloading
RUN go install github.com/air-verse/air@latest

# Create app directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup -s /bin/bash

# Change ownership of the app directory
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port for the application and debug port
EXPOSE 8080 2345

# Set environment variables for development
ENV GO_ENV=development \
    PORT=8080 \
    LOG_LEVEL=debug \
    CGO_ENABLED=0

# Create air configuration
RUN echo '[build]\
  cmd = "go build -o ./tmp/main ./cmd/api"\
  bin = "./tmp/main"\
  full_bin = "./tmp/main"\
  include_ext = ["go", "tpl", "tmpl", "html"]\
  exclude_dir = ["tmp", "vendor", "frontend", "node_modules"]\
  include_dir = []\
  exclude_file = []\
  exclude_regex = ["_test.go"]\
  exclude_unchanged = false\
  follow_symlink = false\
  log = "build-errors.log"\
  delay = 1000\
  stop_on_error = true\
  send_interrupt = false\
  kill_delay = 500\
[color]\
  main = "magenta"\
  watcher = "cyan"\
  build = "yellow"\
  runner = "green"\
[log]\
  time = false\
[misc]\
  clean_on_exit = true' > .air.toml

# Start with air for hot reloading
CMD ["air", "-c", ".air.toml"]